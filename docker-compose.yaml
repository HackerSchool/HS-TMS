services:

  postgres:
    container_name: hs-tms_postgres
    image: postgres:15
    restart: always
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    environment:
      - TZ=Europe/Lisbon
      - PGTZ=Europe/Lisbon
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - backend

  postgres-demo:
    container_name: hs-tms_postgres-demo
    image: postgres:15
    restart: always
    volumes:
      - ./backend/init-demo.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-demo_data:/var/lib/postgresql/data
    environment:
      - TZ=Europe/Lisbon
      - PGTZ=Europe/Lisbon
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - backend
    
  redis:
    container_name: hs-tms_redis
    image: redis:7.2
    restart: always
    volumes:
      - redis_data:/data
    environment:
      - TZ=Europe/Lisbon
    networks:
      - backend

  backend:
    container_name: hs-tms_backend
    build: ./backend
    restart: always
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/src:/usr/src/app/backend/src
      - ./backend/storage:/usr/src/app/backend/storage
      - ./backend/init-demo.sql:/usr/src/app/backend/init-demo.sql
      - backend_storage:/var/lib/hs-tms/storage
    environment:
      - TZ=Europe/Lisbon
    networks:
      - backend
      - nginx-backend

  frontend:
    container_name: hs-tms_frontend
    build: ./frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/usr/src/app/frontend/src
      - ./frontend/dist:/usr/src/app/frontend/dist
    environment:
      - TZ=Europe/Lisbon
    networks:
      - nginx-frontend

  nginx:
    container_name: hs-tms_nginx
    image: nginx:latest
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./frontend/dist:/var/www
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - nginx-backend
      - nginx-frontend

networks:
  backend:
    driver: bridge
  nginx-backend:
    driver: bridge
  nginx-frontend:
    driver: bridge

volumes:
  postgres_data:
  postgres-demo_data:
  redis_data:
  backend_storage:
